{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","request","url","fetch","then","response","ok","Error","status","json","getPhonesIds","phones","map","phone","id","showResult","type","title","resultsArr","div","document","createElement","header","list","phoneId","phoneName","classList","add","innerText","toUpperCase","name","append","body","showError","error","message","getFirstReceivedDetails","phonesList","Promise","any","result","catch","getAllSuccessfulDetails","allSettled","results","successful","forEach","push","value","length","getThreeFastestDetails","phonesListClone","firstThree","splice","indexOf"],"mappings":"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","file":"main.4e077f91.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst\n  BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api/phones';\n\nfunction request(url = '') {\n  return fetch(`${BASE_URL}${url}.json`)\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.status);\n      }\n\n      return response.json();\n    });\n}\n\nfunction getPhonesIds() {\n  return request()\n    .then(phones => phones.map(phone => phone.id));\n}\n\nfunction showResult(type, title, resultsArr) {\n  const div = document.createElement('div');\n  const header = document.createElement('h1');\n  const list = document.createElement('ul');\n\n  for (const phone of resultsArr) {\n    const phoneId = document.createElement('li');\n    const phoneName = document.createElement('li');\n\n    phoneId.classList.add('li-header');\n    phoneId.innerText = `Phone ID: ${phone.id.toUpperCase()}`;\n    phoneName.innerText = `Phone Name: ${phone.name}`;\n    list.append(phoneId, phoneName);\n  }\n\n  div.classList.add(type);\n  header.innerText = title;\n\n  div.append(header, list);\n  document.body.append(div);\n}\n\nfunction showError(type, title, error) {\n  const div = document.createElement('div');\n  const header = document.createElement('h1');\n  const message = document.createElement('p');\n\n  div.classList.add(type);\n  header.innerText = title;\n  message.innerText = error;\n\n  div.append(header, message);\n  document.body.append(div);\n}\n\nfunction getFirstReceivedDetails(phonesList) {\n  return Promise.any(phonesList.map(id => request(`/${id}`)))\n    .then(result => [result])\n    .catch(() => {\n      throw Error('Error on load phones details');\n    });\n};\n\nfunction getAllSuccessfulDetails(phonesList) {\n  return Promise.allSettled(phonesList.map(id => request(`/${id}`)))\n    .then(results => {\n      const successful = [];\n\n      results.forEach(result => {\n        if (result.status === 'fulfilled') {\n          successful.push(result.value);\n        }\n      });\n\n      if (successful.length === 0) {\n        throw Error('Error on load phones details');\n      }\n\n      return successful;\n    });\n}\n\nfunction getThreeFastestDetails(phonesList) {\n  const phonesListClone = [ ...phonesList ];\n  const firstThree = [];\n\n  return getFirstReceivedDetails(phonesListClone)\n    .then(result => {\n      firstThree.push(result[0]);\n      phonesListClone.splice(phonesListClone.indexOf(result[0].id), 1);\n    })\n    .catch(() => {})\n    .then(() => getFirstReceivedDetails(phonesListClone))\n    .then(result => {\n      firstThree.push(result[0]);\n      phonesListClone.splice(phonesListClone.indexOf(result[0].id), 1);\n    })\n    .catch(() => {})\n    .then(() => getFirstReceivedDetails(phonesListClone))\n    .then(result => {\n      firstThree.push(result[0]);\n      phonesListClone.splice(phonesListClone.indexOf(result[0].id), 1);\n    })\n    .catch(() => {})\n    .then(() => {\n      if (firstThree.length === 0) {\n        throw Error('Error on load phones details');\n      }\n\n      return firstThree;\n    });\n}\n\ngetPhonesIds()\n  .then(list => {\n    getFirstReceivedDetails(list)\n      .then(result => showResult('first-received', 'First Received', result))\n      .catch((error) => showError('first-received', 'First Received', error));\n\n    return list;\n  })\n  .then(list => {\n    getAllSuccessfulDetails(list)\n      .then(result => showResult('all-successful', 'All Successful', result))\n      .catch((error) => showError('all-successful', 'All Successful', error));\n\n    return list;\n  })\n  .then(list => {\n    getThreeFastestDetails(list)\n      .then(result => showResult(\n        'first-three-received',\n        'First Three Received',\n        result\n      ))\n      .catch((error) => showError(\n        'first-three-received',\n        'First Three Received',\n        error\n      ));\n  })\n  .catch(error => showError('error', 'Error on load phones IDs', error));\n"]}